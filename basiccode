DEFINT C, I-N, S
DEFSNG B, H, P
DIM s(120, 120), sn(120, 120)
DIM bc(121), c(2,2)
DIM payoff(120, 120)
LET b = 1.85                  advantage for cheating
LET N = 60                    size of board
LET p = 0.1                   proportion of defectors
LET pm(1, 1) = 1              set up payoff matrix
LET pm(1, 2) = 0
LET pm(2, 1) = b
LET pm(2, 2) = 0
                              set up colors
LET c(1, 1) = 1               = 409 on Mac
LET c(2, 2) = 4               = 205 on Mac
LET c(1, 2) = 2               = 341 on Mac
LET c(2, 1) = 14              = 69 on Mac
RANDOMIZE TIMER               initialize board
FOR i = 1 TON
 FOR j = 1 TON
  LET s(i, j) = 1
 IF (RND < p) THEN LET s(i, j) = 2
NEXT j, i
FOR i = 1 TON                   set up boundary conditions
 LET bc(i) = 1                  no problem if i between 1 and N
NEXT i
LET bc(0) = N                   redirect neighbors of edges
LET bc(N + 1) = 1
SCREEN 12                       not needed on Mac
FOR M = 1 TO 1000               begin playing game
FOR i = 1 TON                   calculate payoffs for each player
 FOR j = 1 TON
  LET pa = 0
  FOR k = -1 TO 1
   FOR l = -1 TO 1
    LET pa = pa + pm(s(i, j), s(bc(i + k), bc(j + l)))
  NEXT l, k
  LET payoff(i, j) = pa
NEXT j, i
FOR i = 1 TON                   find largest payoff in each
 FOR j = 1 TON                  neighborhood and calculate
  LET hp = payoff(i, j)         new strategies
  LET sn(i, j) = s(i, j)
   FOR k = -1 TO 1
    FOR l = -1 TO 1
     IF payoff(bc(i + k), bc(j + l)) > hp THEN
      LET hp = payoff (bc(i + k), bc(j + l)
      LET sn(i, j) = s(bc(i + k), bc(j + l))
     END IF
 NEXT l, k
NEXT j, i
FOR i = 1 TON                   display strategies
 FOR j = 1 TON
  COLOR (c(sn(i, j),
   s (i, j)))                   ForeColor on Mac
  PSET (i, j)
  LET s(i, j) = sn(i, j)
 NEXT j, i
NEXT M
END
